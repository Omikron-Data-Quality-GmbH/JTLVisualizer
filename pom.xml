<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>jtl-visualizer</artifactId>
	<groupId>de.factfinder</groupId>
	<packaging>jar</packaging>
	<version>0.1.1-SNAPSHOT</version>
	<name>JTL Visualizer</name>
	
	<description>
		JTL Visualizer visualizes response times from JMeter test results e.g. as histograms in various output formats, e.g. as SVG, PNG or JPG.
	</description>

	<organization>
		<name>Omikron Data Quality GmbH - FACT-Finder Development</name>
		<url>http://www.fact-finder.com/</url>
	</organization>
	
	<dependencies>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-dom</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-transcoder</artifactId>
			<version>1.7</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${target.java}</source>
					<target>${target.java}</target>
					<encoding>UTF8</encoding>
					<!-- To catch warnings within Hudson we include these settings -->
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<!-- create distributable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>net.omikron.jtl.visualizer.JtlToSvg</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>assembly/dist.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>			
			<!-- Attach Sources -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Attach Javadoc -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
						<!-- exclude all JSP generated Java files -->
						<excludePackageNames>jsp.*</excludePackageNames>
				</configuration>
			</plugin>
			<!-- Update Metadata to make the artifact as release -->
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<updateReleaseInfo>true</updateReleaseInfo>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemProperties>
						<property>
							<name>FACTFINDER_TEST_RESOURCES</name>
							<value>/temp/testresources</value>
						</property>
					</systemProperties>
					<!-- -XX:MaxPermSize=512m running tests with PowerMock needs more resources than usual -->
					<!-- -XX:-UseSplitVerifier Bug fix workaround für diesen Fehler: https://code.google.com/p/powermock/issues/detail?id=355
						 Durch diesen Fehler läuft Powermock nicht auf Java 1.7. Java 1.7 ist aber für factfinder-jni 6.8 notwendig.
					 -->
					<argLine>-Xmx512m -XX:PermSize=64m -XX:MaxPermSize=512m -XX:-UseSplitVerifier</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<repositories>
		<repository>
			<id>internal.repository</id>
			<name>Internal Repository</name>
			<url>http://mavenrepo/repository/omikron/</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>internal.repository</id>
			<name>Internal Repository</name>
			<url>http://mavenrepo/repository/omikron/</url>
		</pluginRepository>
	</pluginRepositories>
	<issueManagement>
		<system>Jira</system>
		<url>http://jira.omikron.net/browse/FF</url>
	</issueManagement>
	
	<distributionManagement>
		<repository>
			<id>internal.repository</id>
			<name>Internal Repository</name>
			<url>http://mavenrepo/repository/omikron/</url>
		</repository>
	</distributionManagement>
</project>